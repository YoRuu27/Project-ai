import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

// Create root element
const root = ReactDOM.createRoot(document.getElementById('root'));

// Render the app
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// Performance monitoring
// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

// Service worker registration (optional)
// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://cra.link/PWA
// serviceWorkerRegistration.unregister();

// Hot module replacement for development
if (module.hot) {
  module.hot.accept('./App', () => {
    const NextApp = require('./App').default;
    root.render(
      <React.StrictMode>
        <NextApp />
      </React.StrictMode>
    );
  });
}

// Global error handler
window.addEventListener('error', (event) => {
  console.error('Global error caught:', event.error);
  // You can send error reports to your analytics service here
  // reportWebVitals(({ name, value }) => {
  //   console.log(name, value);
  // });
});

// Unhandled promise rejection handler
window.addEventListener('unhandledrejection', (event) => {
  console.error('Unhandled promise rejection:', event.reason);
  // Prevent the default behavior of logging to console
  event.preventDefault();
});

// Development helpers
if (process.env.NODE_ENV === 'development') {
  // Enable React DevTools
  if (typeof window !== 'undefined' && window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
    window.__REACT_DEVTOOLS_GLOBAL_HOOK__.onCommitFiberRoot = (id, root) => {
      // Custom DevTools integration if needed
    };
  }
  
  // Log environment info
  console.log('ðŸš€ AI Pentest Workflow Dashboard');
  console.log('ðŸ“Š Running in development mode');
  console.log('ðŸ”§ React version:', React.version);
}

// Production optimizations
if (process.env.NODE_ENV === 'production') {
  // Disable console.log in production
  console.log = () => {};
  console.warn = () => {};
  
  // Enable performance monitoring
  reportWebVitals(({ name, value, id }) => {
    // Send to analytics endpoint
    // Example: gtag('event', name, {
    //   event_category: 'Web Vitals',
    //   event_label: id,
    //   value: Math.round(name === 'CLS' ? value * 1000 : value),
    //   non_interaction: true,
    // });
  });
}